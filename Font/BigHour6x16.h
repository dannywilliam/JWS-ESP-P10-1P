/*
 *
 * BigHour6x16
 *
 * created by Danny William
 *
 * File Name           : BigHour6x16.h
 * Date                : 09.01.2024
 * Font size in bytes  : 1003
 * Font width          : 6
 * Font height         : 16
 * Font first char     : 48
 * Font last char      : 59
 * Font used chars     : 11
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#ifdef __AVR__
#include <avr/pgmspace.h>
#elif defined (ESP8266)
#include <pgmspace.h>
#else
#define PROGMEM
#endif

#ifndef BIGHOUR6X16_H
#define BIGHOUR6X16_H

#define BIGHOUR6X16_WIDTH 6
#define BIGHOUR6X16_HEIGHT 16

const static uint8_t BigHour6x16[] PROGMEM = {
    0x03, 0xEB, // size
    0x06, // width
    0x10, // height
    0x30, // first char
    0x0B, // char count
    
    // char widths
    0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 
    0x02, 
    
    // font data
    0xFC, 0xFE, 0x07, 0x07, 0xFE, 0xFC, 0x3F, 0x7F, 0xE0, 0xE0, 0x7F, 0x3F, // 0
    0x18, 0x1C, 0xFF, 0xFF, 0x00, 0x00, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, // 1
    0x3C, 0x3E, 0x07, 0x87, 0xFE, 0xFC, 0xF8, 0xFE, 0xCF, 0xC3, 0xC1, 0xC0, // 2
    0x1C, 0x1E, 0x83, 0x83, 0xFE, 0x7C, 0x38, 0x78, 0xC1, 0xC1, 0x7F, 0x3E, // 3
    0xC0, 0xF0, 0x3C, 0xFF, 0xFF, 0x00, 0x07, 0x07, 0x06, 0xFF, 0xFF, 0x06, // 4
    0xFF, 0xFF, 0x63, 0x63, 0xE3, 0xC3, 0x38, 0x78, 0xE0, 0xE0, 0x7F, 0x3F, // 5
    0xFC, 0xFE, 0x87, 0x87, 0x1E, 0x1C, 0x3F, 0x7F, 0xE1, 0xE1, 0x7F, 0x3E, // 6
    0x07, 0x03, 0xC3, 0xE3, 0x7F, 0x3F, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, // 7
    0x7C, 0xFE, 0x83, 0x83, 0xFE, 0x7C, 0x3E, 0x7F, 0xC1, 0xC1, 0x7F, 0x3E, // 8
    0x7C, 0xFE, 0x87, 0x87, 0xFE, 0xFC, 0x38, 0x78, 0xE1, 0xE1, 0x7F, 0x3F, // 9
    0x38, 0x38, 0x1C, 0x1C // :
    
};

#endif
